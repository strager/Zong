// Hangman game implementation
// Player tries to guess a word letter by letter

struct GameState(
    word: U8[],
    guessed: U8[],
    wrongGuesses: I64,
    maxWrongGuesses: I64
);

func initGame(): GameState {
    // Hard-coded word for simplicity: "ZONG"
    var word U8[];
    append(word&, 90);  // Z
    append(word&, 79);  // O
    append(word&, 78);  // N
    append(word&, 71);  // G
    
    var guessed U8[];
    
    var game GameState = GameState(
        word: word,
        guessed: guessed,
        wrongGuesses: 0,
        maxWrongGuesses: 6
    );
    
    return game;
}

func hasGuessedLetter(game: GameState, letter: U8): Boolean {
    var i I64 = 0;
    loop {
        if i >= game.guessed.length {
            break;
        }
        
        if game.guessed[i] == letter {
            return true;
        }
        
        i = i + 1;
    }
    
    return false;
}

func isLetterInWord(game: GameState, letter: U8): Boolean {
    var i I64 = 0;
    loop {
        if i >= game.word.length {
            break;
        }
        
        if game.word[i] == letter {
            return true;
        }
        
        i = i + 1;
    }
    
    return false;
}

func makeGuess(game: GameState, letter: U8): GameState {
    // Check if already guessed
    if hasGuessedLetter(game, letter) {
        return game;  // No change
    }
    
    // Add to guessed letters
    append(game.guessed&, letter);
    
    // Check if letter is in word
    if isLetterInWord(game, letter) == false {
        // Wrong guess
        game.wrongGuesses = game.wrongGuesses + 1;
    }
    
    return game;
}

func isWordGuessed(game: GameState): Boolean {
    var i I64 = 0;
    loop {
        if i >= game.word.length {
            break;
        }
        
        if hasGuessedLetter(game, game.word[i]) == false {
            return false;
        }
        
        i = i + 1;
    }
    
    return true;
}

func isGameOver(game: GameState): Boolean {
    if game.wrongGuesses >= game.maxWrongGuesses {
        return true;
    }
    
    if isWordGuessed(game) {
        return true;
    }
    
    return false;
}

func printGameState(game: GameState) {
    print_bytes("Word: ");
    
    // Print word with guessed letters revealed
    var i I64 = 0;
    loop {
        if i >= game.word.length {
            break;
        }
        
        if hasGuessedLetter(game, game.word[i]) {
            // Print character based on ASCII value
            var char U8 = game.word[i];
            if char == 90 {  // Z
                print_bytes("Z");
            } else if char == 79 {  // O
                print_bytes("O");
            } else if char == 78 {  // N
                print_bytes("N");
            } else if char == 71 {  // G
                print_bytes("G");
            }
        } else {
            print_bytes("_");
        }
        
        print_bytes(" ");
        
        i = i + 1;
    }
    
    // Print wrong guesses count
    print_bytes("Wrong: ");
    // Print wrong guesses as single digits (0-6)
    if game.wrongGuesses == 0 {
        print_bytes("0");
    } else if game.wrongGuesses == 1 {
        print_bytes("1");
    } else if game.wrongGuesses == 2 {
        print_bytes("2");
    } else if game.wrongGuesses == 3 {
        print_bytes("3");
    } else if game.wrongGuesses == 4 {
        print_bytes("4");
    } else if game.wrongGuesses == 5 {
        print_bytes("5");
    } else {
        print_bytes("6");
    }
    print_bytes("/");
    print_bytes("6");
    var newline2 U8[];
    append(newline2&, 10);
    print_bytes(newline2);
}

func convertToUppercase(letter: U8): U8 {
    // Convert lowercase to uppercase (a-z to A-Z)
    if letter >= 97 && letter <= 122 {  // 'a' to 'z'
        return letter - 32;  // Convert to uppercase
    }
    return letter;
}

func isValidLetter(letter: U8): Boolean {
    // Check if it's A-Z
    if letter >= 65 && letter <= 90 {
        return true;
    }
    return false;
}

func printFullWord(game: GameState) {
    var i I64 = 0;
    loop {
        if i >= game.word.length {
            break;
        }
        
        var char U8 = game.word[i];
        if char == 90 {  // Z
            print_bytes("Z");
        } else if char == 79 {  // O
            print_bytes("O");
        } else if char == 78 {  // N
            print_bytes("N");
        } else if char == 71 {  // G
            print_bytes("G");
        }
        
        i = i + 1;
    }
}

func main() {
    var game GameState = initGame();
    
    print_bytes("HANGMAN GAME");
    var newline1 U8[];
    append(newline1&, 10);
    print_bytes(newline1);
    
    print_bytes("Guess the word letter by letter!");
    var newline2 U8[];
    append(newline2&, 10);
    print_bytes(newline2);
    
    loop {
        if isGameOver(game) {
            break;
        }
        
        printGameState(game);
        
        print_bytes("Enter a letter (A-Z): ");
        
        var input U8[] = read_line();
        
        var validInput Boolean = true;
        
        // Validate input
        if input.length == 0 {
            print_bytes("Please enter a letter!");
            var newline3 U8[];
            append(newline3&, 10);
            print_bytes(newline3);
            validInput = false;
        }
        
        var firstChar U8 = 0;
        var letter U8 = 0;
        
        if validInput {
            firstChar = input[0];
            letter = convertToUppercase(firstChar);
            
            if isValidLetter(letter) == false {
                print_bytes("Invalid input! Please enter a letter A-Z.");
                var newline4 U8[];
                append(newline4&, 10);
                print_bytes(newline4);
                validInput = false;
            }
        }
        
        if validInput {
            if hasGuessedLetter(game, letter) {
                print_bytes("You already guessed that letter!");
                var newline5 U8[];
                append(newline5&, 10);
                print_bytes(newline5);
                validInput = false;
            }
        }
        
        if validInput {
            var oldWrongGuesses I64 = game.wrongGuesses;
            game = makeGuess(game, letter);
            var wasCorrect Boolean = game.wrongGuesses == oldWrongGuesses;
        
            print_bytes("Guess: ");
            // Print letter based on ASCII value
            if letter == 65 {  // A
            print_bytes("A");
        } else if letter == 66 {  // B
            print_bytes("B");
        } else if letter == 67 {  // C
            print_bytes("C");
        } else if letter == 68 {  // D
            print_bytes("D");
        } else if letter == 69 {  // E
            print_bytes("E");
        } else if letter == 70 {  // F
            print_bytes("F");
        } else if letter == 71 {  // G
            print_bytes("G");
        } else if letter == 72 {  // H
            print_bytes("H");
        } else if letter == 73 {  // I
            print_bytes("I");
        } else if letter == 74 {  // J
            print_bytes("J");
        } else if letter == 75 {  // K
            print_bytes("K");
        } else if letter == 76 {  // L
            print_bytes("L");
        } else if letter == 77 {  // M
            print_bytes("M");
        } else if letter == 78 {  // N
            print_bytes("N");
        } else if letter == 79 {  // O
            print_bytes("O");
        } else if letter == 80 {  // P
            print_bytes("P");
        } else if letter == 81 {  // Q
            print_bytes("Q");
        } else if letter == 82 {  // R
            print_bytes("R");
        } else if letter == 83 {  // S
            print_bytes("S");
        } else if letter == 84 {  // T
            print_bytes("T");
        } else if letter == 85 {  // U
            print_bytes("U");
        } else if letter == 86 {  // V
            print_bytes("V");
        } else if letter == 87 {  // W
            print_bytes("W");
        } else if letter == 88 {  // X
            print_bytes("X");
        } else if letter == 89 {  // Y
            print_bytes("Y");
        } else if letter == 90 {  // Z
            print_bytes("Z");
            }
        
            if wasCorrect {
                print_bytes(" - Correct!");
            } else {
                print_bytes(" - Wrong!");
            }
            var newline6 U8[];
            append(newline6&, 10);
            print_bytes(newline6);
        }
    }
    
    // Print final result
    if isWordGuessed(game) {
        var win U8[] = "You Win! The word was: ";
        print_bytes(win);
        printFullWord(game);
    } else {
        var lose U8[] = "Game Over! The word was: ";
        print_bytes(lose);
        printFullWord(game);
    }
    var newline4 U8[];
    append(newline4&, 10);
    print_bytes(newline4);
}